<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.StuScorePredictMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.entity.StuScorePredict" >
    <id column="idscore_predict" property="idscorePredict" jdbcType="INTEGER" />
    <result column="xh" property="xh" jdbcType="VARCHAR" />
    <result column="kcdm" property="kcdm" jdbcType="VARCHAR" />
    <result column="zscj" property="zscj" jdbcType="VARCHAR" />
    <result column="yccj" property="yccj" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    idscore_predict, xh, kcdm, zscj, yccj
  </sql>

  <resultMap id="CourseResultMap" type="com.springmvc.entity.StuScorePredict" >
    <id column="idscore_predict" property="idscorePredict" jdbcType="INTEGER" />
    <result column="xh" property="xh" jdbcType="VARCHAR" />
    <result column="kcdm" property="kcdm" jdbcType="VARCHAR" />
    <result column="zscj" property="zscj" jdbcType="VARCHAR" />
    <result column="yccj" property="yccj" jdbcType="VARCHAR" />
    <association property="course" column="kcdm"  javaType="com.springmvc.entity.Course">
      <result column="kcmc" property="kcmc" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <select id="selectCourseScoreBystudentidLimit" parameterType="Map" resultMap="CourseResultMap">
    SELECT
     a.idscore_predict,a.kcdm, a.zscj,a.yccj,b.kcmc
    FROM
    score_predict a,
    bzks_kc b
    WHERE
    a.xh=#{studentid,jdbcType=VARCHAR} AND
    a.kcdm=b.kcdm AND
    <![CDATA[ a.yccj<70 ]]>
    LIMIT #{startIndex},#{pageSize}
  </select>

  <select id="selectTwoScoreByXh" parameterType="java.lang.String" resultMap="CourseResultMap">
    SELECT
    a.idscore_predict,a.kcdm, a.zscj,a.yccj,b.kcmc
    FROM
    score_predict a,
    bzks_kc b
    WHERE
    a.xh=#{xh,jdbcType=VARCHAR} AND
    a.kcdm=b.kcdm
  </select>

  <select id="selectGoodCourseScoreBystudentidLimit" parameterType="Map" resultMap="CourseResultMap">
    SELECT
    a.idscore_predict,a.kcdm, a.zscj,a.yccj,b.kcmc
    FROM
    score_predict a,
    bzks_kc b
    WHERE
    a.xh=#{studentid,jdbcType=VARCHAR} AND
    a.kcdm=b.kcdm AND
    <![CDATA[ a.yccj>=90 ]]>
    LIMIT #{startIndex},#{pageSize}
  </select>

  <select id="selectCourseScoreLimitSize" parameterType="Map" resultMap="BaseResultMap">
    SELECT
    a.kcdm, a.zscj,a.yccj
    FROM
    score_predict a
    WHERE
    a.xh=#{studentid,jdbcType=VARCHAR} AND
    <![CDATA[ a.yccj<70 ]]>
  </select>

  <select id="selectGoodCourseScoreLimitSize" parameterType="Map" resultMap="BaseResultMap">
    SELECT
    a.kcdm, a.zscj,a.yccj
    FROM
    score_predict a
    WHERE
    a.xh=#{studentid,jdbcType=VARCHAR} AND
    <![CDATA[ a.yccj>=90 ]]>
  </select>

  <resultMap id="FailCourseMap" type="com.springmvc.entity.FailCourse">
    <result property="kcdm" column="kcdm" jdbcType="VARCHAR"/>
    <result property="kcmc" column="kcmc" jdbcType="VARCHAR"/>
    <result property="failnum" column="failnum" jdbcType="INTEGER"/>
    <result property="allnum" column="allnum" jdbcType="INTEGER"/>
    <result property="passnum" column="passnum" jdbcType="INTEGER"/>
    <result property="failrate" column="failrate" jdbcType="DECIMAL"/>
  </resultMap>

  <select id="selectSchoolAllCourseByXymc" resultMap="FailCourseMap" parameterType="Map">
    SELECT
    g.kcdm,
    g.kcmc,
    g.allnum,
    h.passnum,
    (g.allnum - h.passnum) AS failnum,
    (g.allnum - h.passnum) / g.allnum AS failrate
FROM
    (SELECT
        COUNT(a.xh) AS allnum, a.kcdm, b.kcmc
    FROM
        score_predict a, bzks_kc b
    WHERE
        a.kcdm = b.kcdm
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) g,
    (SELECT
        COUNT(a.xh) AS passnum, a.kcdm
    FROM
        score_predict a, bzks_kc b
    WHERE
        a.kcdm = b.kcdm AND a.zscj >= 60
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) h,
    undergraduate_basic j,
    xydm_dzb k,
    score_predict l
WHERE
    g.kcdm = h.kcdm AND j.studentid = l.xh
        AND k.xymc = #{xymc,jdbcType=VARCHAR}
        AND k.xydm = j.schoolid
GROUP BY g.kcdm
ORDER BY failrate DESC
LIMIT #{startIndex},#{pageSize}
  </select>
  <select id="selectSchoolAllCourseByXymcSize" resultMap="FailCourseMap" parameterType="Map">
    SELECT
    g.kcdm,
    g.kcmc,
    g.allnum,
    h.passnum,
    (g.allnum - h.passnum) AS failnum,
    (g.allnum - h.passnum) / g.allnum AS failrate
FROM
    (SELECT
        COUNT(a.xh) AS allnum, a.kcdm, b.kcmc
    FROM
        score_predict a, bzks_kc b
    WHERE
        a.kcdm = b.kcdm
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) g,
    (SELECT
        COUNT(a.xh) AS passnum, a.kcdm
    FROM
        score_predict a, bzks_kc b
    WHERE
        a.kcdm = b.kcdm AND a.zscj >= 60
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) h,
    undergraduate_basic j,
    xydm_dzb k,
    score_predict l
WHERE
    g.kcdm = h.kcdm AND j.studentid = l.xh
        AND k.xymc = #{xymc,jdbcType=VARCHAR}
        AND k.xydm = j.schoolid
GROUP BY g.kcdm
ORDER BY failrate DESC
  </select>

  <select id="selectFailCourseByxymc" resultMap="FailCourseMap" parameterType="Map">
    SELECT
    c.num as failnum, c.kcdm, c.kcmc,count(d.xh) as allnum,c.num/count(d.xh) as failrate
    FROM
    (SELECT
    COUNT(a.xh) AS num, a.kcdm, b.kcmc
    FROM
    score_predict a, bzks_kc b
    WHERE
    <![CDATA[a.zscj < 60]]>   AND a.kcdm = b.kcdm
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) c,
    score_predict d,
    xydm_dzb e,
    undergraduate_basic f
    where c.kcdm=d.kcdm and e.xymc= #{xymc,jdbcType=VARCHAR} and e.xydm=f.schoolid and f.studentid=d.xh
    group by d.kcdm
    order by failrate desc
    LIMIT #{startIndex},#{pageSize}
  </select>
  <select id="selectFailCourseByxymcSize" resultMap="FailCourseMap" parameterType="Map">
    SELECT
    c.num as failnum, c.kcdm, c.kcmc,count(d.xh) as allnum,c.num/count(d.xh) as failrate
    FROM
    (SELECT
    COUNT(a.xh) AS num, a.kcdm, b.kcmc
    FROM
    score_predict a, bzks_kc b
    WHERE
    <![CDATA[a.zscj < 60]]>   AND a.kcdm = b.kcdm
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) c,
    score_predict d,
    xydm_dzb e,
    undergraduate_basic f
    where c.kcdm=d.kcdm and e.xymc= #{xymc,jdbcType=VARCHAR} and e.xydm=f.schoolid and f.studentid=d.xh
    group by d.kcdm
    order by failrate desc
  </select>
  
  <select id="selectAllFailCourseByXymc" parameterType="java.lang.String" resultMap="FailCourseMap">
    SELECT
    c.num as failnum, c.kcdm, c.kcmc,count(d.xh) as allnum,c.num/count(d.xh) as failrate
    FROM
    (SELECT
    COUNT(a.xh) AS num, a.kcdm, b.kcmc
    FROM
    score_predict a, bzks_kc b
    WHERE
    <![CDATA[a.zscj < 60]]>   AND a.kcdm = b.kcdm
    GROUP BY a.kcdm
    ORDER BY COUNT(a.xh) DESC) c,
    score_predict d,
    xydm_dzb e,
    undergraduate_basic f
    where c.kcdm=d.kcdm and e.xymc= #{xymc,jdbcType=VARCHAR} and e.xydm=f.schoolid and f.studentid=d.xh
    group by d.kcdm
    order by failrate desc
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from score_predict
    where idscore_predict = #{idscorePredict,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from score_predict
    where idscore_predict = #{idscorePredict,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springmvc.entity.StuScorePredict" >
    insert into score_predict (idscore_predict, xh, kcdm, 
      zscj, yccj)
    values (#{idscorePredict,jdbcType=INTEGER}, #{xh,jdbcType=VARCHAR}, #{kcdm,jdbcType=VARCHAR}, 
      #{zscj,jdbcType=VARCHAR}, #{yccj,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.entity.StuScorePredict" >
    insert into score_predict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idscorePredict != null" >
        idscore_predict,
      </if>
      <if test="xh != null" >
        xh,
      </if>
      <if test="kcdm != null" >
        kcdm,
      </if>
      <if test="zscj != null" >
        zscj,
      </if>
      <if test="yccj != null" >
        yccj,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idscorePredict != null" >
        #{idscorePredict,jdbcType=INTEGER},
      </if>
      <if test="xh != null" >
        #{xh,jdbcType=VARCHAR},
      </if>
      <if test="kcdm != null" >
        #{kcdm,jdbcType=VARCHAR},
      </if>
      <if test="zscj != null" >
        #{zscj,jdbcType=VARCHAR},
      </if>
      <if test="yccj != null" >
        #{yccj,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.entity.StuScorePredict" >
    update score_predict
    <set >
      <if test="xh != null" >
        xh = #{xh,jdbcType=VARCHAR},
      </if>
      <if test="kcdm != null" >
        kcdm = #{kcdm,jdbcType=VARCHAR},
      </if>
      <if test="zscj != null" >
        zscj = #{zscj,jdbcType=VARCHAR},
      </if>
      <if test="yccj != null" >
        yccj = #{yccj,jdbcType=VARCHAR},
      </if>
    </set>
    where idscore_predict = #{idscorePredict,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.entity.StuScorePredict" >
    update score_predict
    set xh = #{xh,jdbcType=VARCHAR},
      kcdm = #{kcdm,jdbcType=VARCHAR},
      zscj = #{zscj,jdbcType=VARCHAR},
      yccj = #{yccj,jdbcType=VARCHAR}
    where idscore_predict = #{idscorePredict,jdbcType=INTEGER}
  </update>
</mapper>